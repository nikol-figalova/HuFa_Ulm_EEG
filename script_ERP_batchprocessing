% This code was originally provided by Dr. Julian Elias Reiser.
% The code was adapted specifically for my experimental dataset. When reusing, you must adapt the code to your experimental setting. 

% When using this script, I worked in EEGLab version 2022.1 and the following plugins (not all are necessary for this script though):  
%%% EEGLAB: adding "AMICA" v1.7 (see >> help eegplugin_amica)
%%% EEGLAB: adding "Biosig" v3.8.3 to the path
%%%  Koduot: windows-1252
%%% Darbeliai: Checking for updates...
%%%  Kalba: en_GB
%%% EEGLAB: adding "Darbeliai" v2022.12.22.1 (see >> help eegplugin_darbeliai)
%%% EEGLAB: adding "ERPLAB" v9.00 (see >> help eegplugin_erplab) 
%%% EEGLAB: adding "FMUT" v0.5.1 to the path
%%% EEGLAB: adding "Fieldtrip-lite" v20230202 to the path
%%% EEGLAB: adding "ICLabel" v1.4 (see >> help eegplugin_iclabel)
%%% EEGLAB: adding "Mobilab" v20210924 (see >> help eegplugin_mobilab)
%%% EEGLAB: adding "TFA v" v20221221 (see >> help eegplugin_TFA)
%%% EEGLAB: adding "bemobil-pipeline-" v1.9 (see >> help eegplugin_bemobil_pipeline)
%%% EEGLAB: adding "bva-io" v1.71 (see >> help eegplugin_bva_io)
%%% EEGLAB: adding "clean_rawdata" v2.7 (see >> help eegplugin_clean_rawdata) 
%%% EEGLAB: adding "dipfit" v4.3 (see >> help eegplugin_dipfit) 
%%% EEGLAB: adding "firfilt" v2.6 (see >> help eegplugin_firfilt)
%%% EEGLAB: adding "xdfimport" v1.18 (see >> help eegplugin_xdfimport)
%%% EEGLAB: adding "zapline-plus" v1.2.1 (see >> help eegplugin_zapline_plus)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

clear all
% Define paths for different data and tool locations
PATH = '...'; % Main path, e.g. 'C:\Users\Figalova\Desktop\Nikol'
PATH_LAB = '...'; % where your EEGLab is saved, use the same version within the experiment, don't update plugins between participants, e.g. C:\Users\Figalova\Desktop\Nikol\eeglab2022.1

% the following paths define where your data is stored, and where the outputs of this script will be saved. You must create these folders manually. 
PATH_DFLOW = [PATH '/lists/dflow'];
PATH_RAW = [PATH '/data/unprocessed/'];
PATH_EEG = [PATH '/data/EEG'];
PATH_ICA = [PATH '/data/ICA'];
PATH_PRUNED =[PATH '/data/PRUNED'];
PATH_PLOT = [PATH '/plots/'];
PATH_STAT = [PATH '/stats/'];

% List of subject identifiers to process
subjlist = {'29', '30'}; % when you want to process only certain dataset(s)

% If you want to process all, uncomment the following line to process all subjects
% subjlist = {'01','02','03','04','05','06','07','08','09','10',...
%     '11','12','13','14','15','16','17','18','19','20',...
%     '21','22', '23', '24', '25', '26', '27', '28', '29', '30'};

% List of all subject codes, this is how I named my participants 
allsubjlist = {'vp01','vp02','vp03','vp04','vp05','vp06','vp07','vp08','vp09','vp10',...
    'vp11','vp12','vp13','vp14','vp15','vp16','vp17','vp18','vp19','vp20',...
    'vp21','vp22','vp23','vp24','vp25','vp26','vp27','vp28','vp29','vp30'};

for subj = 1:length(subjlist)    % load subject eeg data
    eeglab;
    SUBJ = subjlist{subj};
    EEG = pop_loadset('filename',['new_vp' SUBJ '_pruned_05.set'],'filepath',PATH_PRUNED);

    % bandpass filter the data
    EEG  = pop_basicfilter( EEG,  1:EEG.nbchan , 'Cutoff', [0.5 30], 'Design', 'butter', 'Filter', ...
        'bandpass', 'Order',  2, 'RemoveDC', 'on' ); 

    % continuous artifact rejection
    clear allpoints deletepoints deletetmp alltrials deletetrials badTrials badRegions condTrials
    allpoints = size(EEG.data,2);
    [EEG deleteregions] = pop_rejcont(EEG, 'elecrange',[1:length(EEG.chanlocs)] ,'freqlimit',[20 30] ,...
        'threshold',10,'epochlength',0.1,'contiguous',4,'addlength',0.25,'taper','hamming');
         
    % create eventlist (you must create your own eventlist and replace the path)
    EEG  = pop_creabasiceventlist( EEG , 'AlphanumericCleaning', 'on', 'BoundaryNumeric', { -99 },...
        'BoundaryString', { 'boundary' }, 'Eventlist', ['C:\Users\figalova\Desktop\Bosch\Data\data/eventlist' SUBJ '_eventlist.txt'] ); 

    % assign bins (you must create your own bins and replace the path)
    EEG  = pop_binlister( EEG , 'BDF', 'C:\Users\figalova\Desktop\Bosch\Data\binlister.txt', ...
        'IndexEL',  1, 'SendEL2', 'EEG', 'Voutput', 'EEG' );

    % extract bin-based epochs
    EEG = pop_epochbin( EEG , [-200.0  800.0],  'pre');

    % step-like artifact rejection
    EEG  = pop_artstep( EEG , 'Channel',  1:32, 'Flag',  1, 'LowPass',  -1, 'Threshold',  50, 'Twindow', [ -200 798], 'Windowsize',  200,...
    'Windowstep',  10 );

    % output table with artifact rejection sum-up
    EEG = pop_summary_AR_eeg_detection(EEG, [PATH_STAT '/vp' SUBJ '_chanrej.txt']);

    % average ERPs 
    ERP = pop_averager( EEG , 'Criterion', 'good', 'DQ_custom_wins', 0, 'DQ_flag', 1, 'DQ_preavg_txt', 0, 'ExcludeBoundary', 'on', 'SEM',...
    'on' );
   
    % create difference wave
    ERP = pop_binoperator( ERP, {   'Bin10 = Bin1 - Bin3 label L3 infrequent DW',...
                                    'Bin11 = Bin2 - Bin3 label L3 environmental DW',...
                                    'Bin12 = Bin4 - Bin6 label MAN infrequent DW', ...
                                    'Bin13 = Bin5 - Bin6 label MAN environmental DW', ...
                                    'Bin14 = Bin7 - Bin9 label L2 infrequent DW',...
                                    'Bin15 = Bin8 - Bin9 label L2 environmental DW'});

    % create new, averaged channels 
    ERP = pop_erpchanoperator( ERP, {   'ch33 = (ch2 + ch3 + ch31) / 3 label Fz_F3_F4',  ...
                                        'ch34 = (ch2 + ch3 + ch4 + ch30 +ch31) / 5 label Fz_F3_F7_F8_F4',...
                                        'ch35 = (ch2 + ch3 + ch4 + ch5 + ch29 + ch30 + ch31) / 7 label Fz_F3_F7_F9_F10_F8_F4',...
                                        'ch36 = (ch2 + ch7 + ch27) / 3 label Fz_FC1_FC2',  ...
                                        'ch37 = (ch2 + ch3 + ch31 + ch7 + ch27) / 5 label Fz_F3_F4_FC1_FC2'},  ...
                                        'ErrorMsg', 'popup', 'KeepLocations',  1,...
                                        'Warning', 'on' );

    % save the averaged ERP.set
    ERP = pop_savemyerp(ERP, 'erpname', ['vp' SUBJ '_ERP'], 'filename', ['vp' SUBJ '_ERP.erp'], 'filepath', PATH_ERP, 'Warning',...
    'on');
    

end
